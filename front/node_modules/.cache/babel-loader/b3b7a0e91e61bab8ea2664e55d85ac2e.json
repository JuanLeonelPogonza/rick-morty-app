{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lolo\\\\OneDrive\\\\Escritorio\\\\rick-morty-wiki\\\\src\\\\components\\\\Form\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevFormData => ({ ...prevFormData,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Validar los datos del formulario aquí utilizando expresiones regulares\n\n    const nameRegex = /^[a-zA-Z ]{2,30}$/;\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\n    const isNameValid = nameRegex.test(formData.name);\n    const isEmailValid = emailRegex.test(formData.email);\n    const isPasswordValid = passwordRegex.test(formData.password);\n\n    if (isNameValid && isEmailValid && isPasswordValid) {\n      // Redirigir al usuario a la página de inicio\n      navigate('/');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      value: formData.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      value: formData.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Contrase\\xF1a:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      value: formData.password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"uyBFm4P8C2IOGmqO98xgXdP1W4M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Lolo/OneDrive/Escritorio/rick-morty-wiki/src/components/Form/Register.js"],"names":["React","useState","useNavigate","Register","formData","setFormData","name","email","password","navigate","handleChange","event","value","target","prevFormData","handleSubmit","preventDefault","nameRegex","emailRegex","passwordRegex","isNameValid","test","isEmailValid","isPasswordValid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC;AACvCK,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,QAAQ,EAAE;AAH6B,GAAD,CAAxC;AAMA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AAAEL,MAAAA,IAAF;AAAQM,MAAAA;AAAR,QAAkBD,KAAK,CAACE,MAA9B;AACAR,IAAAA,WAAW,CAAES,YAAD,KAAmB,EAC7B,GAAGA,YAD0B;AAE7B,OAACR,IAAD,GAAQM;AAFqB,KAAnB,CAAD,CAAX;AAID,GAND;;AAQA,QAAMG,YAAY,GAAIJ,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACK,cAAN,GAD8B,CAG9B;;AACA,UAAMC,SAAS,GAAG,mBAAlB;AACA,UAAMC,UAAU,GAAG,gDAAnB;AACA,UAAMC,aAAa,GAAG,qDAAtB;AAEA,UAAMC,WAAW,GAAGH,SAAS,CAACI,IAAV,CAAejB,QAAQ,CAACE,IAAxB,CAApB;AACA,UAAMgB,YAAY,GAAGJ,UAAU,CAACG,IAAX,CAAgBjB,QAAQ,CAACG,KAAzB,CAArB;AACA,UAAMgB,eAAe,GAAGJ,aAAa,CAACE,IAAd,CAAmBjB,QAAQ,CAACI,QAA5B,CAAxB;;AAEA,QAAIY,WAAW,IAAIE,YAAf,IAA+BC,eAAnC,EAAoD;AAClD;AACAd,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;AACF,GAhBD;;AAkBA,sBACE;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,MAAtB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,KAAK,EAAEX,QAAQ,CAACE,IAAzD;AAA+D,MAAA,QAAQ,EAAEI;AAAzE;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,OAAvB;AAA+B,MAAA,IAAI,EAAC,OAApC;AAA4C,MAAA,KAAK,EAAEN,QAAQ,CAACG,KAA5D;AAAmE,MAAA,QAAQ,EAAEG;AAA7E;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAC,UAA1B;AAAqC,MAAA,IAAI,EAAC,UAA1C;AAAqD,MAAA,KAAK,EAAEN,QAAQ,CAACI,QAArE;AAA+E,MAAA,QAAQ,EAAEE;AAAzF;AAAA;AAAA;AAAA;AAAA,YARF,eAUE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAjDQP,Q;UAOUD,W;;;KAPVC,Q;AAmDT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Register() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Validar los datos del formulario aquí utilizando expresiones regulares\r\n    const nameRegex = /^[a-zA-Z ]{2,30}$/;\r\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\r\n\r\n    const isNameValid = nameRegex.test(formData.name);\r\n    const isEmailValid = emailRegex.test(formData.email);\r\n    const isPasswordValid = passwordRegex.test(formData.password);\r\n\r\n    if (isNameValid && isEmailValid && isPasswordValid) {\r\n      // Redirigir al usuario a la página de inicio\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"name\">Name:</label>\r\n      <input type=\"text\" id=\"name\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n\r\n      <label htmlFor=\"email\">Email:</label>\r\n      <input type=\"email\" id=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n\r\n      <label htmlFor=\"password\">Contraseña:</label>\r\n      <input type=\"password\" id=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n\r\n      <button type=\"submit\">Enviar</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}